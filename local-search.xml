<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决：Github无法通过ssh上传代码</title>
    <link href="/2024/10/17/github-ssh/"/>
    <url>/2024/10/17/github-ssh/</url>
    
    <content type="html"><![CDATA[<h1id="解决github无法通过ssh上传代码">解决：Github无法通过ssh上传代码</h1><ul><li>问题描述</li></ul><blockquote><p>Github的安全协议在2020年后不允许用户使用token的情况下直接上传代码，需要使用ssh的方式上传代码</p><p>使用ssh上传代码遇到报错</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Connection closed by 20.205.243.166 port 22<br></code></pre></td></tr></table></figure><h2 id="解决方案">解决方案</h2><p>将github的ssh连接端口改为443</p><p>编辑ssh的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.ssh/config<br></code></pre></td></tr></table></figure><p>在配置文件中添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host github.com<br>     Hostname ssh.github.com<br>     Port 443<br></code></pre></td></tr></table></figure><ul><li>测试是否能正常连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>终端返回</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ ssh -T git@github.com<br>Hi xxx! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><p>至此配置完成，可以正常连接到github</p>]]></content>
    
    
    
    <tags>
      
      <tag>PROXY</tag>
      
      <tag>SSH</tag>
      
      <tag>DEPLOY</tag>
      
      <tag>NETWORK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决：Power Profiles Daemon已安装的情况下，KDE仍然提示未安装</title>
    <link href="/2024/10/17/power-profiles-daemon-not-found-although-installed/"/>
    <url>/2024/10/17/power-profiles-daemon-not-found-although-installed/</url>
    
    <content type="html"><![CDATA[<h1 id="power-profiles-daemon已安装的情况下kde仍然提示未安装">PowerProfiles Daemon已安装的情况下，KDE仍然提示未安装</h1><h2 id="问题表现">问题表现</h2><p>Pacman已安装<code>power-profiles-daemon</code>，但KDE仍然提示未安装</p><h2 id="检查是否安装">检查是否安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -Q | grep power-profiles-daemon<br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ pacman -Q | grep power-profiles-daemon<br><br>power-profiles-daemon 0.23-1<br></code></pre></td></tr></table></figure><h2 id="尝试">尝试</h2><p>重启桌面环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">killall plasmashell &amp;&amp; kstart5 plasmashell<br></code></pre></td></tr></table></figure><p>发现KDE提示已安装，可以选择电源模式</p><p>导致这个问题的原因是<code>power-profiles-daemon</code>服务晚于KDE启动，导致KDE无法检测到服务的存在。重启桌面环境后，KDE重新检测服务后问题解决</p><h2 id="解决方案">解决方案</h2><p>需要编辑电源管理时重启桌面环境即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
      <tag>FIX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决：Archlinux启动电脑后黑屏，无法进入SDDM</title>
    <link href="/2024/10/16/sddm-black-screen/"/>
    <url>/2024/10/16/sddm-black-screen/</url>
    
    <content type="html"><![CDATA[<h1 id="sddm黑屏问题">SDDM黑屏问题</h1><h3id="问题表现sddm在x11下启动后黑屏只有左上角光标闪烁">问题表现：SDDM在X11下启动后黑屏，只有左上角光标闪烁</h3><blockquote><p>环境</p><ul><li>操作系统：Arch Linux</li><li>显卡：NVIDIA GeForce RTX 4060 laptop | AMD Radeon 610M 双显卡</li><li>驱动：NVIDIA 560.35 | xf86-video-amdgpu</li><li>桌面环境：KDE Plasma 6.2.1 on wayland</li></ul></blockquote><h3 id="思路解决方案">思路&amp;解决方案</h3><p>sddm正常启动的前提条件：</p><ol type="1"><li>Xorg服务正常启动</li><li>显卡驱动正常加载</li><li>Dbus服务正常启动</li><li>sddm服务正常启动</li></ol><p>按Ctrl+Alt+F3进入tty3，登录后检查Xorg运行状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xdpyinfo<br></code></pre></td></tr></table></figure><p>发现输出Unable to open display ""，说明Xorg服务未正常启动</p><p>怀疑是NVIDIA驱动出现问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvidia-smi<br></code></pre></td></tr></table></figure><p>Result:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">Wed Oct 16 14:46:21 2024       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA GeForce RTX 4060 ...    On  |   00000000:01:00.0 Off |                  N/A |<br>| N/A   41C    P3             10W /   80W |      15MiB /   8188MiB |      6%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|    0   N/A  N/A      1196      G   /usr/lib/Xorg                                   4MiB |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><p>输出正常，说明驱动正常加载</p><p>怀疑是Xorg配置文件出现问题，尝试删除配置文件重新生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> /etc/X11/xorg.conf<br><span class="hljs-built_in">sudo</span> nvidia-xconfig<br><span class="hljs-built_in">sudo</span> reboot<br></code></pre></td></tr></table></figure><p>重启后问题依旧，尝试使用Xorg生成而不是NVIDIA生成的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> /etc/X11/xorg.conf<br><span class="hljs-built_in">sudo</span> reboot<br></code></pre></td></tr></table></figure><p>重启后问题成功解决分析：Xorg配置文件在执行<code>sudo pacman -Syu xorg</code>后出现问题，删除后重新生成即可解决NVIDIA生成的配置文件有问题，别用<code>nvidia-xconfig</code>生成 <del>FKUNVIDIA</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
      <tag>FIX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexos</title>
    <link href="/2024/10/15/hello-hexos/"/>
    <url>/2024/10/15/hello-hexos/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建个人博客">搭建个人博客</h1><p>教程来源： https://xie.infoq.cn/article/ac51ce1f6e9434779c35cbb6c</p>]]></content>
    
    
    
    <tags>
      
      <tag>DEPLOY</tag>
      
      <tag>HEXOS</tag>
      
      <tag>DEV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Linux上安装Dragon Well</title>
    <link href="/2022/11/08/install-dragon-well-on-linux/"/>
    <url>/2022/11/08/install-dragon-well-on-linux/</url>
    
    <content type="html"><![CDATA[<h3 id="前言">1 前言</h3><p>在本博文中，Java将被安装在 <code>/opt/java/dragonwell/</code>目录下。如果您希望更改安装目录，请相应调整命令。</p><p>此外，这篇博文主要是为了记录自己的操作 <del>看不懂就算了</del></p><h3 id="dragon-well的下载">2 Dragon Well的下载</h3><p>选择以下两种下载方式的其中一种，推荐使用第二种：</p><h4 id="方法一懒人下载">2.1 方法一：懒人下载</h4><p>首先，创建一个临时目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /temp1<br></code></pre></td></tr></table></figure><p>进入临时目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /temp1<br></code></pre></td></tr></table></figure><p>使用 <code>wget</code> 下载Dragon Well：</p><p><strong>注意：请确认下载链接是否有效。如果无效，请查阅<code>wget</code>命令的用法，寻找可用的下载链接，或采用第二种下载方法。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dragonwell.oss-cn-shanghai.aliyuncs.com/17.0.4.0.4%2B8/Alibaba_Dragonwell_Standard_17.0.4.0.4%2B8_x64_linux.tar.gz<br></code></pre></td></tr></table></figure><p>下载部分到此结束。</p><h4 id="方法二常规下载">2.2 方法二：常规下载</h4><p>您可以访问以下链接进行下载：</p><ul><li><a href="https://github.com/alibaba/dragonwell17/releases"title="原下载地址">原下载地址</a></li><li><ahref="https://github.com/alibaba/dragonwell17/wiki/Mirrors-for-download-"title="镜像">镜像下载</a></li></ul><p>下载后请将文件上传至服务器的 <code>/temp1</code>目录（可以更改，但后续命令中请相应调整）。</p><h3 id="正式安装">3 正式安装</h3><h4 id="解压">3.1 解压</h4><p>使用以下命令解压下载的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf Alibaba_Dragonwell_Standard_17.0.4.0.4+8_x64_linux.tar.gz -C /opt/java/<br></code></pre></td></tr></table></figure><h4 id="配置全局变量">3.2 配置全局变量</h4><p>使用 <code>vim</code> 编辑用户的 <code>.bashrc</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><h5 id="编辑-.bashrc">3.2.1 编辑 <code>.bashrc</code></h5><p>在 <code>vim</code> 中，按 <code>i</code>进入编辑模式，然后粘贴以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/opt/java/dragonwell/dragonwell-17.0.4.0.4+8-GA<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/lib/dt.jar:<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/lib/tools.jar<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>按 <code>Esc</code> 退出编辑模式，输入 <code>:wq</code>保存并退出。</p><h5 id="刷新环境变量">3.2.2 刷新环境变量</h5><p>使用以下命令刷新环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>至此，环境变量的配置已完成。</p><h3 id="验证">4 验证</h3><p>输入以下命令以验证Java是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><p>如果输出中出现“Dragon Well”的字样，则表示安装成功。</p>]]></content>
    
    
    
    <tags>
      
      <tag>DEPLOY</tag>
      
      <tag>JAVA</tag>
      
      <tag>DRAGON WELL</tag>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
